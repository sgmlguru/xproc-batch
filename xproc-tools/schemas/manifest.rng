<?xml version="1.0" encoding="UTF-8"?>
<grammar xmlns="http://relaxng.org/ns/structure/1.0"
	xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"
	ns="http://www.corbas.co.uk/ns/transforms/data"
	datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">

	<a:documentation xmlns="http://www.w3.org/1999/xhtml">
		<p> This program and accompanying files are copyright 2008, 2009, 20011, 2012, 2013 Corbas
			Consulting Ltd. This program is free software: you can redistribute it and/or modify it under
			the terms of the GNU General Public License as published by the Free Software Foundation,
			either version 3 of the License, or (at your option) any later version. This program is
			distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the
			implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
			Public License for more details. You should have received a copy of the GNU General Public
			License along with this program. If not, see http://www.gnu.org/licenses/. If your
			organisation or company are a customer or client of Corbas Consulting Ltd you may be able to
			use and/or distribute this software under a different license. If you are not aware of any
			such agreement and wish to agree other license terms you must contact Corbas Consulting Ltd by
			email at corbas@corbas.co.uk.</p>
	</a:documentation>

	<a:documentation xmlns="http://www.w3.org/1999/xhtml">
		<h2>Manifest Documents</h2>
		<p>Manifest documents represent lists of files to be used by a process within the XSLT pipeline.
			For an example of this usage, look at <code>load-sequence-from-file.xpl</code> where a
			manifest is used to load a sequence of XML files as an XProc step.</p>
	</a:documentation>

	<start>
		<ref name="manifest"/>
	</start>

	<define name="manifest">
		<a:documentation xmlns="http://www.w3.org/1999/xhtml">
			<p>manifest elements are the root of the manifest document. The contain one or more item
				and/or processed-item elements used to represent a file to be processed in some manner. The
				xml:base attribute can be used to override the base URI for the item elements.</p>
			<p>The version is assumed to be the current version unless otherwise specified. This makes no
				difference within major versions as they will be backwards compatible. However, it may cause
				issues if it is omitted across major versions</p>
		</a:documentation>
		<element name="manifest">
			<zeroOrMore>
				<ref name="metadata"/>
			</zeroOrMore>
			<oneOrMore>
				<choice>
					<ref name="item"/>
					<ref name="processed-item"/>
					<ref name="import"/>
					<ref name="group"/>					
				</choice>
			</oneOrMore>
			<ref name="common-attributes"/>
			<optional>
				<ref name="version"/>
			</optional>
		</element>
	</define>

	<define name="processed-item">
		<a:documentation xmlns="http://www.w3.org/1999/xhtml">
			<p>A <code>processed-item</code> element allows a file in the manifest to be defined as the
				result of transforming an XML file with a stylesheet. There are several transformation tasks
				within the system where XSLT is generated by XSLT operating on configuration files. This
				element allows that process to be defined in a manifest file.</p>
		</a:documentation>
		<element name="processed-item">
			<interleave>
				<oneOrMore>
					<ref name="item"/>
				</oneOrMore>
				<zeroOrMore>
					<ref name="metadata"/>
				</zeroOrMore>
			</interleave>
			<attribute name="stylesheet">
				<data type="anyURI"/>
			</attribute>
			<ref name="content-attributes"/>
		</element>
	</define>

	<define name="item">
		<a:documentation>
			<p xmlns="http://www.w3.org/1999/xhtml">item elements are file containers. Each element
				references a single external file to be used for some purpose. The xml:base attribute can be
				used to override the base URI for this specific element allowing a manifest to contain
				elements from multiple locations.</p>
		</a:documentation>
		<element name="item">
			<ref name="href"/>
			<zeroOrMore>
				<ref name="metadata"/>
			</zeroOrMore>
			<ref name="content-attributes"/>
		</element>
	</define>

	<define name="import">
		<a:documentation>
			<p xmlns="http://www.w3.org/1999/xhtml">import elements are also file containers. import
				statements are resolved during processing. The element should refer to another manifest
				file. All the children of the referenced manifest are inserted to replace the import
				statement itself. The root of loaded manifest must be a <code>group</code> or
					<code>manifest</code> element.</p>
		</a:documentation>
		<element name="import">
			<ref name="href"/>
			<ref name="content-attributes"/>
		</element>
	</define>

	<define name="group">
		<a:documentationd>
			<p xmlns="http://www.w3.org/1999/xhtml">The group element contains steps and metadata. The
				metadata is applied to all documents loaded from the group. Grouping is only intended to be
				meaningful in the manifest and the loader does not retain groups. </p>
		</a:documentationd>
		<element name="group">
			<interleave>
				<ref name="group-content"/>
				<zeroOrMore>
					<ref name="metadata"/>
				</zeroOrMore>
			</interleave>
			<ref name="content-attributes"/>
		</element>
	</define>

	<define name="metadata">
		<a:documentation>
			<p xmlns="http://www.w3.org/1999/xhtml">meta elements are used to associate key-value pairs
				with documents. They are inserted into the document by the loader as namespaced
				(http://www.corbas.co.uk/ns/transforms/data) attributes on the <em>root element</em>
				with the name and value performing as would be expected.</p>
		</a:documentation>
		<element name="meta">
			<attribute name="name">
				<data type="Name"/>
			</attribute>
			<attribute name="value">
				<text/>
			</attribute>
			<ref name="content-attributes"/>
		</element>
	</define>

	<define name="group-content">
		<a:documentation xmlns="http://www.w3.org/1999/xhtml">
			<p>Shared content model for groups and manifests</p>
		</a:documentation>
		<oneOrMore>
			<choice>
				<ref name="item"/>
				<ref name="processed-item"/>
				<ref name="import"/>
				<ref name="group"/>
			</choice>
		</oneOrMore>
	</define>

	<define name="common-attributes">
		<a:documentation xmlns="http://www.w3.org/1999/xhtml">
			<p>Shared attributes.</p>
		</a:documentation>
		<optional>
			<ref name="xml.base"/>
		</optional>
		<optional>
			<ref name="xml.id"/>
		</optional>
		<optional>
			<ref name="description"/>
		</optional>
	</define>

	<define name="content-attributes">
		<a:documentation xmlns="http://www.w3.org/1999/xhtml">
			<p>Attributes shared by everything except the manifest.</p>
		</a:documentation>
		<ref name="common-attributes"/>
		<optional>
			<ref name="enabled"/>
		</optional>
	</define>

	<define name="xml.id">
		<attribute name="xml:id">
			<a:documentation xmlns="http://www.w3.org/1999/xhtml">
				<p>Identifies the unique ID value of the element</p>
			</a:documentation>
			<data type="ID"/>
		</attribute>
	</define>

	<define name="xml.base">
		<attribute name="xml:base">
			<a:documentation>
				<p>Specifies the base URI of the element and its descendants</p>
			</a:documentation>
			<data type="anyURI"/>
		</attribute>
	</define>

	<define name="href">
		<a:documentation xmlns="http://www.w3.org/1999/xhtml">
			<p>The href attribute is used to define input files for the manifest to load.</p>
		</a:documentation>
		<attribute name="href">
			<data type="anyURI"/>
		</attribute>
	</define>

	<define name="description">
		<a:documentation xmlns="http://www.w3.org/1999/xhtml">
			<p>The description allows for a short piece of descriptive text to be applied to an item.</p>
		</a:documentation>
		<attribute name="description">
			<text/>
		</attribute>
	</define>

	<define name="enabled">
		<a:documentation xmlns="http://www.w3.org/1999/xhtml">
			<p>True/false value to be used by the loader to selectively enable or disable groups and items
				in the manifest. Items and elements are considered to be enabled by default.</p>
		</a:documentation>
		<attribute name="enabled">
			<data type="boolean"/>
		</attribute>
	</define>

	<define name="version">
		<a:documentation xmlns="http:/www.w3.org/1999/xhtml">
			<p>The version of manifest</p>
		</a:documentation>
		<attribute name="version">
			<choice>
				<value>1.0</value>
				<value>1.1</value>
				<value>1.2</value>
			</choice>
		</attribute>
	</define>

</grammar>
